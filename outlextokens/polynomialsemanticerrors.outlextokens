[inlinecmt, //  ====== Class declarations ====== //, 1] [class, class, 2] [id, POLYNOMIAL, 2] [opencubr, {, 2] 
[private, private, 3] [float, float, 3] [id, a, 3] [semi, ;, 3] 
[public, public, 4] [func, func, 4] [id, evaluate, 4] [openpar, (, 4] [float, float, 4] [id, x, 4] [closepar, ), 4] [colon, :, 4] [float, float, 4] [semi, ;, 4] 
[public, public, 5] [func, func, 5] [id, evaluate2, 5] [openpar, (, 5] [float, float, 5] [id, x, 5] [closepar, ), 5] [colon, :, 5] [float, float, 5] [semi, ;, 5] [inlinecmt, //  6.2, 5] [closecubr, }, 6] [semi, ;, 6] 
[class, class, 7] [id, POLYNOMIAL, 7] [opencubr, {, 7] [inlinecmt, //  8.1, 7] [public, public, 8] [func, func, 8] [id, evaluate, 8] [openpar, (, 8] [float, float, 8] [id, x, 8] [closepar, ), 8] [colon, :, 8] [float, float, 8] [semi, ;, 8] 
[public, public, 9] [func, func, 9] [id, evaluate, 9] [openpar, (, 9] [integer, integer, 9] [id, x, 9] [closepar, ), 9] [colon, :, 9] [integer, integer, 9] [semi, ;, 9] [inlinecmt, //  9.2, 9] [closecubr, }, 10] [semi, ;, 10] 
[class, class, 11] [id, LINEAR, 11] [inherits, inherits, 11] [id, POLYNOMIAL, 11] [opencubr, {, 11] 
[private, private, 12] [float, float, 12] [id, a, 12] [semi, ;, 12] 
[private, private, 13] [float, float, 13] [id, b, 13] [semi, ;, 13] 
[private, private, 14] [integer, integer, 14] [id, b, 14] [semi, ;, 14] [inlinecmt, //  8.3, 14] 
[public, public, 16] [func, func, 16] [id, build, 16] [openpar, (, 16] [float, float, 16] [id, A, 16] [comma, ,, 16] [float, float, 16] [id, B, 16] [closepar, ), 16] [colon, :, 16] [id, LINEAR, 16] [semi, ;, 16] 
[public, public, 17] [func, func, 17] [id, evaluate, 17] [openpar, (, 17] [float, float, 17] [id, x, 17] [closepar, ), 17] [colon, :, 17] [float, float, 17] [semi, ;, 17] [inlinecmt, //  9.3, 17] [closecubr, }, 18] [semi, ;, 18] 

[class, class, 20] [id, QUADRATIC, 20] [inherits, inherits, 20] [id, POLYNOMIAL, 20] [opencubr, {, 20] 
[private, private, 21] [float, float, 21] [id, a, 21] [semi, ;, 21] [inlinecmt, //  8.5, 21] [private, private, 22] [float, float, 22] [id, b, 22] [semi, ;, 22] [inlinecmt, //  8.5, 22] [private, private, 23] [float, float, 23] [id, c, 23] [semi, ;, 23] 

[public, public, 25] [func, func, 25] [id, build, 25] [openpar, (, 25] [float, float, 25] [id, A, 25] [comma, ,, 25] [float, float, 25] [id, B, 25] [comma, ,, 25] [float, float, 25] [id, C, 25] [closepar, ), 25] [colon, :, 25] [id, QUADRATIC, 25] [semi, ;, 25] 
[public, public, 26] [func, func, 26] [id, evaluate, 26] [openpar, (, 26] [float, float, 26] [id, x, 26] [closepar, ), 26] [colon, :, 26] [float, float, 26] [semi, ;, 26] [inlinecmt, //  9.3, 26] [closecubr, }, 27] [semi, ;, 27] 

[class, class, 29] [id, C, 29] [inherits, inherits, 29] [id, E, 29] [opencubr, {, 29] 
[private, private, 30] [integer, integer, 30] [id, a, 30] [semi, ;, 30] 
[closecubr, }, 31] [semi, ;, 31] 

[class, class, 33] [id, D, 33] [inherits, inherits, 33] [id, C, 33] [opencubr, {, 33] 
[private, private, 34] [integer, integer, 34] [id, b, 34] [semi, ;, 34] 
[closecubr, }, 35] [semi, ;, 35] 

[class, class, 37] [id, E, 37] [inherits, inherits, 37] [id, D, 37] [opencubr, {, 37] [inlinecmt, //  14.1, 37] [private, private, 38] [integer, integer, 38] [id, c, 38] [semi, ;, 38] 
[closecubr, }, 39] [semi, ;, 39] 


[inlinecmt, //  ====== Function Definitions ====== //, 42] [func, func, 43] [id, POLYNOMIAL, 43] [coloncolon, ::, 43] [id, evaluate, 43] [openpar, (, 43] [float, float, 43] [id, x, 43] [closepar, ), 43] [colon, :, 43] [float, float, 43] 
[opencubr, {, 44] 
[return, return, 45] [openpar, (, 45] [intnum, 0, 45] [closepar, ), 45] [semi, ;, 45] 
[closecubr, }, 46] 

[func, func, 48] [id, LINEAR, 48] [coloncolon, ::, 48] [id, evaluate, 48] [openpar, (, 48] [float, float, 48] [id, x, 48] [closepar, ), 48] [colon, :, 48] [float, float, 48] 
[opencubr, {, 49] 
[var, var, 50] 
[opencubr, {, 51] 
[float, float, 52] [id, result, 52] [semi, ;, 52] 
[closecubr, }, 53] 
[id, result, 54] [assign, =, 54] [floatnum, 0.0, 54] [semi, ;, 54] 
[id, result, 55] [assign, =, 55] [id, a, 55] [mult, *, 55] [id, x, 55] [plus, +, 55] [id, b, 55] [semi, ;, 55] 
[return, return, 56] [openpar, (, 56] [id, result, 56] [closepar, ), 56] [semi, ;, 56] 
[closecubr, }, 57] 

[func, func, 59] [id, QUADRATIC, 59] [coloncolon, ::, 59] [id, evaluate, 59] [openpar, (, 59] [float, float, 59] [id, x, 59] [closepar, ), 59] [colon, :, 59] [float, float, 59] 
[opencubr, {, 60] 
[var, var, 61] 
[opencubr, {, 62] 
[float, float, 63] [id, result, 63] [semi, ;, 63] 
[float, float, 64] [id, result, 64] [semi, ;, 64] 
[closecubr, }, 65] 
[inlinecmt, // Using Horner's method, 66] [id, result, 67] [assign, =, 67] [id, a, 67] [semi, ;, 67] 
[id, result, 68] [assign, =, 68] [id, result, 68] [mult, *, 68] [id, x, 68] [plus, +, 68] [id, b, 68] [semi, ;, 68] 
[id, result, 69] [assign, =, 69] [id, result, 69] [mult, *, 69] [id, x, 69] [plus, +, 69] [id, c, 69] [semi, ;, 69] 
[return, return, 70] [openpar, (, 70] [id, result, 70] [closepar, ), 70] [semi, ;, 70] 
[closecubr, }, 71] 

[func, func, 73] [id, LINEAR, 73] [coloncolon, ::, 73] [id, build, 73] [openpar, (, 73] [float, float, 73] [id, A, 73] [comma, ,, 73] [float, float, 73] [id, B, 73] [closepar, ), 73] [colon, :, 73] [id, LINEAR, 73] 
[opencubr, {, 74] 
[var, var, 75] 
[opencubr, {, 76] 
[id, LINEAR, 77] [id, new_function, 77] [semi, ;, 77] 
[closecubr, }, 78] 
[id, new_function, 79] [dot, ., 79] [id, a, 79] [assign, =, 79] [id, A, 79] [semi, ;, 79] 
[id, new_function, 80] [dot, ., 80] [id, b, 80] [assign, =, 80] [id, B, 80] [semi, ;, 80] 
[return, return, 81] [openpar, (, 81] [id, new_function, 81] [closepar, ), 81] [semi, ;, 81] 
[closecubr, }, 82] 

[func, func, 84] [id, QUADRATIC, 84] [coloncolon, ::, 84] [id, build, 84] [openpar, (, 84] [float, float, 84] [id, A, 84] [comma, ,, 84] [float, float, 84] [id, B, 84] [comma, ,, 84] [float, float, 84] [id, C, 84] [closepar, ), 84] [colon, :, 84] [id, QUADRATIC, 84] 
[opencubr, {, 85] 
[var, var, 86] 
[opencubr, {, 87] 
[id, QUADRATIC, 88] [id, new_function, 88] [semi, ;, 88] 
[closecubr, }, 89] 
[id, new_function, 90] [dot, ., 90] [id, a, 90] [assign, =, 90] [id, A, 90] [plus, +, 90] [id, B, 90] [mult, *, 90] [intnum, 3, 90] [semi, ;, 90] [inlinecmt, //  10.1, 90] [id, new_function, 91] [dot, ., 91] [id, b, 91] [assign, =, 91] [id, B, 91] [semi, ;, 91] 
[id, new_function, 92] [dot, ., 92] [id, c, 92] [assign, =, 92] [stringlit, "string", 92] [semi, ;, 92] [inlinecmt, //  10.2 , 92] [return, return, 93] [openpar, (, 93] [intnum, 1, 93] [closepar, ), 93] [semi, ;, 93] [inlinecmt, //  10.3, 93] [closecubr, }, 94] 

[func, func, 96] [id, QUADRATIC, 96] [coloncolon, ::, 96] [id, build2, 96] [openpar, (, 96] [float, float, 96] [id, A, 96] [comma, ,, 96] [float, float, 96] [id, B, 96] [comma, ,, 96] [float, float, 96] [id, C, 96] [closepar, ), 96] [colon, :, 96] [id, QUADRATIC, 96] [inlinecmt, //  6.1, 96] [opencubr, {, 97] 
[var, var, 98] 
[opencubr, {, 99] 
[id, QUADRATIC, 100] [id, new_function, 100] [semi, ;, 100] 
[closecubr, }, 101] 
[id, new_function, 102] [dot, ., 102] [id, a, 102] [assign, =, 102] [id, A, 102] [semi, ;, 102] 
[id, new_function, 103] [dot, ., 103] [id, b, 103] [assign, =, 103] [id, B, 103] [semi, ;, 103] 
[id, new_function, 104] [dot, ., 104] [id, c, 104] [assign, =, 104] [id, C, 104] [semi, ;, 104] 
[return, return, 105] [openpar, (, 105] [id, new_function, 105] [closepar, ), 105] [semi, ;, 105] 
[closecubr, }, 106] 

[func, func, 108] [id, f, 108] [openpar, (, 108] [integer, integer, 108] [id, i, 108] [closepar, ), 108] [colon, :, 108] [void, void, 108] [opencubr, {, 108] [closecubr, }, 108] 
[func, func, 109] [id, f, 109] [openpar, (, 109] [integer, integer, 109] [id, i, 109] [closepar, ), 109] [colon, :, 109] [void, void, 109] [opencubr, {, 109] [closecubr, }, 109] [inlinecmt, //  8.2, 109] [func, func, 110] [id, f, 110] [openpar, (, 110] [integer, integer, 110] [id, i, 110] [comma, ,, 110] [integer, integer, 110] [id, i, 110] [closepar, ), 110] [colon, :, 110] [integer, integer, 110] [opencubr, {, 110] [closecubr, }, 110] [inlinecmt, //  9.1, 110] 
[func, func, 112] [id, f3, 112] [openpar, (, 112] [integer, integer, 112] [id, p1, 112] [opensqbr, [, 112] [intnum, 2, 112] [closesqbr, ], 112] [opensqbr, [, 112] [intnum, 3, 112] [closesqbr, ], 112] [closepar, ), 112] [colon, :, 112] [integer, integer, 112] [opencubr, {, 112] [closecubr, }, 112] 


[inlinecmt, //  ====== main ====== //, 115] [main, main, 116] 
[opencubr, {, 117] 
[var, var, 118] 
[opencubr, {, 119] 
[id, A, 120] [id, a, 120] [semi, ;, 120] [inlinecmt, //  11.5, 120] [id, C, 121] [id, c, 121] [semi, ;, 121] 
[id, linear, 122] [id, f1, 122] [semi, ;, 122] 
[id, quadratic, 123] [id, f2, 123] [semi, ;, 123] 
[integer, integer, 124] [id, counter, 124] [semi, ;, 124] 
[float, float, 125] [id, counter, 125] [semi, ;, 125] [inlinecmt, //  8.4, 125] [integer, integer, 126] [id, i, 126] [opensqbr, [, 126] [intnum, 2, 126] [closesqbr, ], 126] [opensqbr, [, 126] [intnum, 3, 126] [closesqbr, ], 126] [semi, ;, 126] 
[integer, integer, 127] [id, j, 127] [opensqbr, [, 127] [intnum, 1, 127] [closesqbr, ], 127] [opensqbr, [, 127] [intnum, 2, 127] [closesqbr, ], 127] [opensqbr, [, 127] [intnum, 3, 127] [closesqbr, ], 127] [semi, ;, 127] 
[closecubr, }, 128] 
[id, f1, 129] [assign, =, 129] [id, f1, 129] [dot, ., 129] [id, build, 129] [openpar, (, 129] [intnum, 2, 129] [comma, ,, 129] [floatnum, 3.5, 129] [closepar, ), 129] [semi, ;, 129] 
[id, f2, 130] [assign, =, 130] [id, f2, 130] [dot, ., 130] [id, build, 130] [openpar, (, 130] [minus, -, 130] [floatnum, 2.0, 130] [comma, ,, 130] [floatnum, 1.0, 130] [comma, ,, 130] [floatnum, 0.0, 130] [closepar, ), 130] [semi, ;, 130] 
[id, f3, 131] [assign, =, 131] [intnum, 9, 131] [semi, ;, 131] 
[id, f1, 132] [dot, ., 132] [id, c, 132] [assign, =, 132] [intnum, 1, 132] [semi, ;, 132] [inlinecmt, //  11.2, 132] [id, counter, 133] [assign, =, 133] [id, f1, 133] [dot, ., 133] [id, f, 133] [openpar, (, 133] [closepar, ), 133] [semi, ;, 133] [inlinecmt, //  11.3, 133] [id, undefined, 134] [openpar, (, 134] [closepar, ), 134] [semi, ;, 134] [inlinecmt, //  11.4, 134] [id, counter, 135] [assign, =, 135] [id, a, 135] [semi, ;, 135] [inlinecmt, //  11.1, 135] [id, f, 136] [openpar, (, 136] [intnum, 1, 136] [comma, ,, 136] [intnum, 1, 136] [comma, ,, 136] [intnum, 1, 136] [closepar, ), 136] [semi, ;, 136] [inlinecmt, //  12.1, 136] [id, f, 137] [openpar, (, 137] [floatnum, 1.2, 137] [comma, ,, 137] [intnum, 1, 137] [closepar, ), 137] [semi, ;, 137] [inlinecmt, //  12.2	, 137] [id, i, 138] [opensqbr, [, 138] [intnum, 2, 138] [closesqbr, ], 138] [assign, =, 138] [intnum, 1, 138] [semi, ;, 138] [inlinecmt, //  13.1, 138] [id, i, 139] [opensqbr, [, 139] [stringlit, "hello", 139] [closesqbr, ], 139] [opensqbr, [, 139] [floatnum, 1.3, 139] [closesqbr, ], 139] [assign, =, 139] [intnum, 2, 139] [semi, ;, 139] [inlinecmt, //  13.2, 139] [id, f3, 140] [openpar, (, 140] [id, j, 140] [opensqbr, [, 140] [intnum, 1, 140] [closesqbr, ], 140] [closepar, ), 140] [semi, ;, 140] [inlinecmt, //  13.3, 140] [id, counter, 141] [dot, ., 141] [id, x, 141] [assign, =, 141] [intnum, 1, 141] [semi, ;, 141] [inlinecmt, //  15.1, 141] [id, j, 142] [opensqbr, [, 142] [intnum, 1, 142] [closesqbr, ], 142] [assign, =, 142] [intnum, 0, 142] [semi, ;, 142] 
[while, while, 143] [openpar, (, 143] [id, counter, 143] [leq, <=, 143] [intnum, 10, 143] [closepar, ), 143] 
[opencubr, {, 144] 
[write, write, 145] [openpar, (, 145] [id, counter, 145] [closepar, ), 145] [semi, ;, 145] 
[write, write, 146] [openpar, (, 146] [id, f1, 146] [dot, ., 146] [id, evaluate, 146] [openpar, (, 146] [id, counter, 146] [closepar, ), 146] [closepar, ), 146] [semi, ;, 146] 
[write, write, 147] [openpar, (, 147] [id, f2, 147] [dot, ., 147] [id, evaluate, 147] [openpar, (, 147] [id, counter, 147] [closepar, ), 147] [closepar, ), 147] [semi, ;, 147] 
[closecubr, }, 148] [semi, ;, 148] 
[closecubr, }, 149] 

[blockcmt, /* 1.   |X| global symbol table
2.   |X| class symbol table
3.1  |X| class data member
3.2  |X| function's local variable
4.1  |X| free function
4.2  |X| member function
6.1  |X| undeclared member function definition
6.2  |X| undefined member function declaration
8.1  |X| multiply declared class
8.2  |X| multiply defined free function
8.3  |X| multiply declared identifier in class
8.4  |X| multiply declared identifier in function
8.5  |X| shadowed inherited data member
9.1  |X| Overloaded free function
9.2  |X| Overloaded member function
9.3  |X| Overridden inherited member function
10.1 |X| Type error in expression
10.2 |X| Type error in assignment statement 
10.3 |X| Type error in return statement
11.1 |X| Undeclared local variable
11.2 |X| Undeclared data member
11.3 |X| Undeclared member function
11.4 |X| Undeclared free function
11.5 |X| Undeclared class
12.1 |X| Function call with wrong number of parameters
12.2 |X| Function call with wrong type of parameters
13.1 |X| Use of array with wrong number of dimensions
13.2 |X| Array index is not an integer
13.3 |X| Array parameter using wrong number of dimensions
14.1 |X| Circular class dependency
15.1 |X| "." operator used on non-class type
*/, 151] 

