[inlinecmt, //  Assignment 4 coverage:, 1] [inlinecmt, //       -------------, 2] [inlinecmt, //       | YES | NO  |, 3] [inlinecmt, //       -------------, 4] [inlinecmt, //  1.1: |  X  |     |, 5] [inlinecmt, //  1.2: |  X  |     |, 6] [inlinecmt, //  1.3: |     |  X  |, 7] [inlinecmt, //  1.4: |     |  X  |, 8] [inlinecmt, //  2.1: |  X  |     |, 9] [inlinecmt, //  2.2: |  X  |     |, 10] [inlinecmt, //  2.3: |     |  X  |, 11] [inlinecmt, //  2.4: |     |  X  |, 12] [inlinecmt, //  3.1: |  X  |     |, 13] [inlinecmt, //  3.2: |  X  |     |, 14] [inlinecmt, //  3.3: |  X  |     |, 15] [inlinecmt, //  3.4: |  X  |     |, 16] [inlinecmt, //  4.1: |  X  |     |, 17] [inlinecmt, //  4.2: |     |  X  |, 18] [inlinecmt, //  4.3: |     |  X  |, 19] [inlinecmt, //  4.4: |     |  X  |, 20] [inlinecmt, //  5.1: |  X  |     |, 21] [inlinecmt, //  5.2: |  X  |     |, 22] [inlinecmt, //  5.3: |     |  X  |, 23] [inlinecmt, //       -------------, 24] 
[blockcmt, /* sort the array */, 26] 
[func, func, 27] [id, bubbleSort, 27] [openpar, (, 27] [integer, integer, 27] [id, arr, 27] [opensqbr, [, 27] [closesqbr, ], 27] [comma, ,, 27] [integer, integer, 27] [id, size, 27] [closepar, ), 27] [colon, :, 27] [void, void, 27] [inlinecmt, //  2.1, 2.2, 27] [opencubr, {, 28] 
[var, var, 29] 
[opencubr, {, 30] 
[integer, integer, 31] [id, n, 31] [semi, ;, 31] [inlinecmt, //  1.1, 31] [integer, integer, 32] [id, i, 32] [semi, ;, 32] [inlinecmt, //  1.1, 32] [integer, integer, 33] [id, j, 33] [semi, ;, 33] [inlinecmt, //  1.1, 33] [integer, integer, 34] [id, temp, 34] [semi, ;, 34] [inlinecmt, //  1.1, 34] [closecubr, }, 35] 
[id, n, 36] [assign, =, 36] [id, size, 36] [semi, ;, 36] [inlinecmt, //  3.1, 36] [id, i, 37] [assign, =, 37] [intnum, 0, 37] [semi, ;, 37] [inlinecmt, //  3.1, 37] [id, j, 38] [assign, =, 38] [intnum, 0, 38] [semi, ;, 38] [inlinecmt, //  3.1, 38] [id, temp, 39] [assign, =, 39] [intnum, 0, 39] [semi, ;, 39] [inlinecmt, //  3.1, 39] [while, while, 40] [openpar, (, 40] [id, i, 40] [lt, <, 40] [id, n, 40] [minus, -, 40] [intnum, 1, 40] [closepar, ), 40] [opencubr, {, 40] [inlinecmt, //  3.3, 5.1, 40] [while, while, 41] [openpar, (, 41] [id, j, 41] [lt, <, 41] [id, n, 41] [minus, -, 41] [id, i, 41] [minus, -, 41] [intnum, 1, 41] [closepar, ), 41] [opencubr, {, 41] [inlinecmt, //  3.3, 41] [if, if, 42] [openpar, (, 42] [id, arr, 42] [opensqbr, [, 42] [id, j, 42] [closesqbr, ], 42] [gt, >, 42] [id, arr, 42] [opensqbr, [, 42] [id, j, 42] [plus, +, 42] [intnum, 1, 42] [closesqbr, ], 42] [closepar, ), 42] [inlinecmt, //  3.2, 4.1, 5.1, 5.2, 42] [then, then, 43] [opencubr, {, 43] 
[inlinecmt, //  swap temp and arr[i], 44] [id, temp, 45] [assign, =, 45] [id, arr, 45] [opensqbr, [, 45] [id, j, 45] [closesqbr, ], 45] [semi, ;, 45] [inlinecmt, //  3.1, 4.1, 5.2, 45] [id, arr, 46] [opensqbr, [, 46] [id, j, 46] [closesqbr, ], 46] [assign, =, 46] [id, arr, 46] [opensqbr, [, 46] [id, j, 46] [plus, +, 46] [intnum, 1, 46] [closesqbr, ], 46] [semi, ;, 46] [inlinecmt, //  3.1, 4.1, 5.2, 46] [id, arr, 47] [opensqbr, [, 47] [id, j, 47] [plus, +, 47] [intnum, 1, 47] [closesqbr, ], 47] [assign, =, 47] [id, temp, 47] [semi, ;, 47] [inlinecmt, //  3.1, 4.1, 5.2, 47] [closecubr, }, 48] [else, else, 48] [semi, ;, 48] 
[id, j, 49] [assign, =, 49] [id, j, 49] [plus, +, 49] [intnum, 1, 49] [semi, ;, 49] [inlinecmt, //  3.1, 5.1, 49] [closecubr, }, 50] [semi, ;, 50] 
[id, i, 51] [assign, =, 51] [id, i, 51] [plus, +, 51] [intnum, 1, 51] [semi, ;, 51] [inlinecmt, //  3.1, 5.1, 51] [closecubr, }, 52] [semi, ;, 52] 
[closecubr, }, 53] 

[blockcmt, /* Print the array */, 55] 
[func, func, 56] [id, printArray, 56] [openpar, (, 56] [integer, integer, 56] [id, arr, 56] [opensqbr, [, 56] [closesqbr, ], 56] [comma, ,, 56] [integer, integer, 56] [id, size, 56] [closepar, ), 56] [colon, :, 56] [void, void, 56] [inlinecmt, //  2.1, 2.2, 56] [opencubr, {, 57] 
[var, var, 58] 
[opencubr, {, 59] 
[integer, integer, 60] [id, n, 60] [semi, ;, 60] [inlinecmt, //  1.1, 60] [integer, integer, 61] [id, i, 61] [semi, ;, 61] [inlinecmt, //  1.1, 61] [closecubr, }, 62] 
[id, n, 63] [assign, =, 63] [id, size, 63] [semi, ;, 63] [inlinecmt, //  3.1, 63] [id, i, 64] [assign, =, 64] [intnum, 0, 64] [semi, ;, 64] [inlinecmt, //  3.1, 64] [while, while, 65] [openpar, (, 65] [id, i, 65] [lt, <, 65] [id, n, 65] [closepar, ), 65] [opencubr, {, 65] [inlinecmt, //  3.3, 5.1, 65] [write, write, 66] [openpar, (, 66] [id, arr, 66] [opensqbr, [, 66] [id, i, 66] [closesqbr, ], 66] [closepar, ), 66] [semi, ;, 66] [inlinecmt, //  3.4, 4.1, 5.2, 66] [id, i, 67] [assign, =, 67] [id, i, 67] [plus, +, 67] [intnum, 1, 67] [semi, ;, 67] [inlinecmt, //  3.1, 5.1, 67] [closecubr, }, 68] [semi, ;, 68] 
[closecubr, }, 69] 

[inlinecmt, //  main funtion to test above, 71] [main, main, 72] [opencubr, {, 72] 
[var, var, 73] 
[opencubr, {, 74] 
[integer, integer, 75] [id, arr, 75] [opensqbr, [, 75] [intnum, 7, 75] [closesqbr, ], 75] [semi, ;, 75] [inlinecmt, //  1.2, 75] [closecubr, }, 76] 
[id, arr, 77] [opensqbr, [, 77] [intnum, 0, 77] [closesqbr, ], 77] [assign, =, 77] [intnum, 64, 77] [semi, ;, 77] [inlinecmt, //  3.1, 77] [id, arr, 78] [opensqbr, [, 78] [intnum, 1, 78] [closesqbr, ], 78] [assign, =, 78] [intnum, 34, 78] [semi, ;, 78] [inlinecmt, //  3.1, 78] [id, arr, 79] [opensqbr, [, 79] [intnum, 2, 79] [closesqbr, ], 79] [assign, =, 79] [intnum, 25, 79] [semi, ;, 79] [inlinecmt, //  3.1, 79] [id, arr, 80] [opensqbr, [, 80] [intnum, 3, 80] [closesqbr, ], 80] [assign, =, 80] [intnum, 12, 80] [semi, ;, 80] [inlinecmt, //  3.1, 80] [id, arr, 81] [opensqbr, [, 81] [intnum, 4, 81] [closesqbr, ], 81] [assign, =, 81] [intnum, 22, 81] [semi, ;, 81] [inlinecmt, //  3.1, 81] [id, arr, 82] [opensqbr, [, 82] [intnum, 5, 82] [closesqbr, ], 82] [assign, =, 82] [intnum, 11, 82] [semi, ;, 82] [inlinecmt, //  3.1, 82] [id, arr, 83] [opensqbr, [, 83] [intnum, 6, 83] [closesqbr, ], 83] [assign, =, 83] [intnum, 90, 83] [semi, ;, 83] [inlinecmt, //  3.1, 83] [id, printarray, 84] [openpar, (, 84] [id, arr, 84] [comma, ,, 84] [intnum, 7, 84] [closepar, ), 84] [semi, ;, 84] [inlinecmt, //  2.1, 2.2, 84] [id, bubbleSort, 85] [openpar, (, 85] [id, arr, 85] [comma, ,, 85] [intnum, 7, 85] [closepar, ), 85] [semi, ;, 85] [inlinecmt, //  2.1, 2.2, 85] [id, printarray, 86] [openpar, (, 86] [id, arr, 86] [comma, ,, 86] [intnum, 7, 86] [closepar, ), 86] [semi, ;, 86] [inlinecmt, //  2.1, 2.2, 86] [closecubr, }, 87] 