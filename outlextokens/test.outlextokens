[class, class, 1] [id, POLYNOMIAL, 1] [opencubr, {, 1] 
[public, public, 2] [func, func, 2] [id, evaluate, 2] [openpar, (, 2] [float, float, 2] [id, x, 2] [closepar, ), 2] [colon, :, 2] [float, float, 2] [semi, ;, 2] 
[closecubr, }, 3] [semi, ;, 3] 

[class, class, 5] [id, LINEAR, 5] [inherits, inherits, 5] [id, POLYNOMIAL, 5] [opencubr, {, 5] 
[float, float, 6] [id, a, 6] [semi, ;, 6] 
[private, private, 7] [float, float, 7] [id, b, 7] [semi, ;, 7] 

[public, public, 9] [func, func, 9] [id, build, 9] [openpar, (, 9] [float, float, 9] [id, A, 9] [comma, ,, 9] [float, float, 9] [id, B, 9] [closepar, ), 9] [colon, :, 9] [id, LINEAR, 9] [semi, ;, 9] 
[public, public, 10] [func, func, 10] [id, evaluate, 10] [openpar, (, 10] [float, float, 10] [id, x, 10] [closepar, ), 10] [colon, :, 10] [float, float, 10] [semi, ;, 10] 
[closecubr, }, 11] [semi, ;, 11] 

[inlinecmt, //  abcabc, 13] 
[class, class, 15] [id, QUADRATIC, 15] [inherits, inherits, 15] [id, POLYNOMIAL, 15] [opencubr, {, 15] 
[private, private, 16] [float, float, 16] [id, a, 16] [semi, ;, 16] 
[private, private, 17] [float, float, 17] [id, b, 17] [semi, ;, 17] 
[private, private, 18] [float, float, 18] [id, c, 18] [semi, ;, 18] 

[public, public, 20] [func, func, 20] [id, build, 20] [openpar, (, 20] [float, float, 20] [id, A, 20] [comma, ,, 20] [float, float, 20] [id, B, 20] [comma, ,, 20] [float, float, 20] [id, C, 20] [closepar, ), 20] [colon, :, 20] [id, QUADRATIC, 20] [semi, ;, 20] 
[public, public, 21] [func, func, 21] [id, evaluate, 21] [openpar, (, 21] [float, float, 21] [id, x, 21] [closepar, ), 21] [colon, :, 21] [float, float, 21] [semi, ;, 21] 
[closecubr, }, 22] [semi, ;, 22] 

[func, func, 24] [id, POLYNOMIAL, 24] [coloncolon, ::, 24] [id, evaluate, 24] [openpar, (, 24] [float, float, 24] [id, x, 24] [closepar, ), 24] [colon, :, 24] [float, float, 24] 
[opencubr, {, 25] 
[return, return, 26] [openpar, (, 26] [intnum, 0, 26] [closepar, ), 26] [semi, ;, 26] 
[closecubr, }, 27] 


[func, func, 30] [id, LINEAR, 30] [coloncolon, ::, 30] [id, evaluate, 30] [openpar, (, 30] [float, float, 30] [id, x, 30] [closepar, ), 30] [colon, :, 30] [float, float, 30] 
[opencubr, {, 31] 
[var, var, 32] 
[opencubr, {, 33] 
[float, float, 34] [id, result, 34] [semi, ;, 34] 
[closecubr, }, 35] 
[id, result, 36] [assign, =, 36] [floatnum, 0.0, 36] [semi, ;, 36] 
[id, result, 37] [assign, =, 37] [id, a, 37] [mult, *, 37] [id, x, 37] [plus, +, 37] [id, b, 37] [semi, ;, 37] 
[return, return, 38] [openpar, (, 38] [id, result, 38] [closepar, ), 38] [semi, ;, 38] 
[closecubr, }, 39] 

[func, func, 41] [id, QUADRATIC, 41] [coloncolon, ::, 41] [id, evaluate, 41] [openpar, (, 41] [float, float, 41] [id, x, 41] [closepar, ), 41] [colon, :, 41] [float, float, 41] 
[opencubr, {, 42] 
[var, var, 43] 
[opencubr, {, 44] 
[float, float, 45] [id, result, 45] [semi, ;, 45] 
[closecubr, }, 46] 
[id, result, 47] [assign, =, 47] [id, a, 47] [semi, ;, 47] 
[id, result, 48] [assign, =, 48] [id, result, 48] [mult, *, 48] [id, x, 48] [plus, +, 48] [id, b, 48] [semi, ;, 48] 
[id, result, 49] [assign, =, 49] [id, result, 49] [mult, *, 49] [id, x, 49] [plus, +, 49] [id, c, 49] [semi, ;, 49] 
[return, return, 50] [openpar, (, 50] [id, result, 50] [closepar, ), 50] [semi, ;, 50] 
[closecubr, }, 51] 

[func, func, 53] [id, LINEAR, 53] [coloncolon, ::, 53] [id, build, 53] [openpar, (, 53] [float, float, 53] [id, A, 53] [comma, ,, 53] [float, float, 53] [id, B, 53] [closepar, ), 53] [colon, :, 53] [id, LINEAR, 53] 
[opencubr, {, 54] 
[var, var, 55] 
[opencubr, {, 56] 
[id, LINEAR, 57] [id, new_function, 57] [semi, ;, 57] 
[closecubr, }, 58] 
[id, new_function, 59] [dot, ., 59] [id, a, 59] [assign, =, 59] [id, A, 59] [semi, ;, 59] 
[id, new_function, 60] [dot, ., 60] [id, b, 60] [assign, =, 60] [id, B, 60] [semi, ;, 60] 
[return, return, 61] [openpar, (, 61] [id, new_function, 61] [closepar, ), 61] [semi, ;, 61] 
[closecubr, }, 62] 

[func, func, 64] [id, QUADRATIC, 64] [coloncolon, ::, 64] [id, build, 64] [openpar, (, 64] [float, float, 64] [id, A, 64] [comma, ,, 64] [float, float, 64] [id, B, 64] [comma, ,, 64] [float, float, 64] [id, C, 64] [closepar, ), 64] [colon, :, 64] [id, QUADRATIC, 64] 
[opencubr, {, 65] 
[var, var, 66] 
[opencubr, {, 67] 
[id, QUADRATIC, 68] [id, new_function, 68] [semi, ;, 68] 
[closecubr, }, 69] 
[id, new_function, 70] [dot, ., 70] [id, a, 70] [assign, =, 70] [id, A, 70] [semi, ;, 70] 
[id, new_function, 71] [dot, ., 71] [id, b, 71] [assign, =, 71] [id, B, 71] [semi, ;, 71] 
[id, new_function, 72] [dot, ., 72] [id, c, 72] [assign, =, 72] [id, C, 72] [semi, ;, 72] 
[return, return, 73] [openpar, (, 73] [id, new_function, 73] [closepar, ), 73] [semi, ;, 73] 
[closecubr, }, 74] 

[main, main, 76] 
[opencubr, {, 77] 
[var, var, 78] [opencubr, {, 78] 
[closecubr, }, 79] 
[id, f1, 80] [assign, =, 80] [id, f1, 80] [dot, ., 80] [id, build, 80] [openpar, (, 80] [intnum, 2, 80] [comma, ,, 80] [floatnum, 3.5, 80] [closepar, ), 80] [semi, ;, 80] 
[id, f2, 81] [assign, =, 81] [id, f2, 81] [dot, ., 81] [id, build, 81] [openpar, (, 81] [minus, -, 81] [floatnum, 2.0, 81] [comma, ,, 81] [floatnum, 1.0, 81] [comma, ,, 81] [floatnum, 0.0, 81] [closepar, ), 81] [semi, ;, 81] 
[id, counter, 82] [assign, =, 82] [intnum, 1, 82] [semi, ;, 82] 
[id, f1, 83] [assign, =, 83] [id, f1, 83] [openpar, (, 83] [id, f2, 83] [closepar, ), 83] [dot, ., 83] [id, f3, 83] [semi, ;, 83] 
[id, f1, 84] [assign, =, 84] [id, f1, 84] [openpar, (, 84] [id, f2, 84] [closepar, ), 84] [dot, ., 84] [id, f3, 84] [openpar, (, 84] [closepar, ), 84] [semi, ;, 84] 
[id, f1, 85] [assign, =, 85] [id, new_function, 85] [dot, ., 85] [id, a, 85] [opensqbr, [, 85] [id, b, 85] [closesqbr, ], 85] [semi, ;, 85] 
[id, f2, 86] [assign, =, 86] [id, f1, 86] [opensqbr, [, 86] [id, f3, 86] [closesqbr, ], 86] [dot, ., 86] [id, f4, 86] [opensqbr, [, 86] [id, f2, 86] [closesqbr, ], 86] [semi, ;, 86] 
[id, f2, 87] [assign, =, 87] [id, f1, 87] [dot, ., 87] [id, f2, 87] [opensqbr, [, 87] [id, f3, 87] [closesqbr, ], 87] [opensqbr, [, 87] [id, f4, 87] [closesqbr, ], 87] [semi, ;, 87] 
[id, f3, 88] [assign, =, 88] [id, f1, 88] [opensqbr, [, 88] [id, f2, 88] [closesqbr, ], 88] [opensqbr, [, 88] [id, f3, 88] [closesqbr, ], 88] [dot, ., 88] [id, f4, 88] [semi, ;, 88] 
[id, f3, 89] [assign, =, 89] [id, f1, 89] [opensqbr, [, 89] [id, f2, 89] [closesqbr, ], 89] [opensqbr, [, 89] [id, f3, 89] [closesqbr, ], 89] [dot, ., 89] [id, f1, 89] [opensqbr, [, 89] [id, f2, 89] [closesqbr, ], 89] [opensqbr, [, 89] [id, f3, 89] [closesqbr, ], 89] [semi, ;, 89] 
[id, f1, 90] [assign, =, 90] [id, f1, 90] [openpar, (, 90] [id, f2, 90] [closepar, ), 90] [dot, ., 90] [id, f3, 90] [opensqbr, [, 90] [id, f4, 90] [closesqbr, ], 90] [semi, ;, 90] 
[id, f1, 91] [assign, =, 91] [id, f1, 91] [openpar, (, 91] [id, f2, 91] [closepar, ), 91] [dot, ., 91] [id, f3, 91] [opensqbr, [, 91] [id, f4, 91] [closesqbr, ], 91] [opensqbr, [, 91] [id, f4, 91] [closesqbr, ], 91] [semi, ;, 91] 
[id, f2, 92] [assign, =, 92] [id, f1, 92] [opensqbr, [, 92] [id, f1, 92] [openpar, (, 92] [id, f2, 92] [closepar, ), 92] [dot, ., 92] [id, f3, 92] [openpar, (, 92] [closepar, ), 92] [closesqbr, ], 92] [semi, ;, 92] 
[while, while, 93] [openpar, (, 93] [id, counter, 93] [leq, <=, 93] [intnum, 10, 93] [closepar, ), 93] 
[opencubr, {, 94] 
[write, write, 95] [openpar, (, 95] [id, counter, 95] [closepar, ), 95] [semi, ;, 95] 
[write, write, 96] [openpar, (, 96] [id, f1, 96] [dot, ., 96] [id, evaluate, 96] [openpar, (, 96] [id, counter, 96] [closepar, ), 96] [closepar, ), 96] [semi, ;, 96] 
[write, write, 97] [openpar, (, 97] [id, f2, 97] [dot, ., 97] [id, evaluate, 97] [openpar, (, 97] [id, counter, 97] [closepar, ), 97] [closepar, ), 97] [semi, ;, 97] 
[closecubr, }, 98] [semi, ;, 98] 
[closecubr, }, 99] 
[blockcmt, /*     classes
    --------------------------------------
| | no class declaration
| | class declaration
|X| multiple class declarations
|X| no data member declaration
|X| data member declaration
|X| multiple data member declaration
| | no member function declaration
|X| member function declaration
|X| multiple member function declaration
| | no member
|X| no inherited class
|X| one inherited class
| | multiple inherited classes
|X| private member specifier
|X| public member specifier
|X| absence of member specifier

    functions: definitions
    --------------------------------------
| | no main function definition (not allowed)
|X| main function definition
| | multiple main function definitions (not allowed)
|X| no free function definition
| | free function definition
| | multiple free function definitions
| | no member function definition
|X| member function definition
|X| multiple member function definitions
| | return type: void
| | return type: integer
|X| return type: float
| | return type: string
|X| return type: id
| | return type: array (not allowed)


    functions: formal parameters
    --------------------------------------
| | type: integer
|X| type: float
| | type: string
| | type: id
| | type: 1-dim array
| | type: n-dim array
| | type: array (with size)
| | type: array (without size)

    functions: calls
    --------------------------------------
| | free function call
|X| member function call
| | parameters:0
|X| parameters:1
|X| parameters:n
| | array parameter - 1-dim
| | array parameter - n-dim
| | array parameter - with size
| | array parameter - without size
| | function call as statement
|X| function call as expression factor
| | expression as parameter

    variable declaration
    --------------------------------------
| | type: integer
| | type: float
| | type: string
|X| type: id
| | type: 1-dim array
| | type: n-dim array
| | type: array (with size)
| | type: array (without size)

    function body: local variable declaration block
    --------------------------------------
| | no local variable declarations block
|X| local variable declaration block
| | multiple local variable declarations block (not allowed)
|X| no variables in block
| | 1 variable declared in block
| | multiple variables declared in block

    function body: statements
    --------------------------------------
| | no statement
| | 1 statement
|X| n statements
| | if statement
| | if: empty then or else blocks
| | if: 1-statement then or else blocks
| | if: n-statements then or else blocks
|X| while statement
| | while: empty block
| | while: 1-statement block
|X| while: n-statement block
| | read(<variable>) statement
|X| write(<expr>) statement
|X| return(<expr>) statement
| | break statement
| | continue statement
|X| assignment statement

    variable + idnest
    --------------------------------------
|X| id
|X| id.id
|X| id.id(id)
|X| id(id).id
|X| id(id).id()
|X| id.id[id]
|X| id[id].id
|X| id[id].id[id]
|X| id.id[id][id]
|X| id[id][id].id
|X| id[id][id].id[id][id]
|X| id(id).id[id]
|X| id(id).id[id][id]
| | expression as array index

    expressions
    --------------------------------------
| | single variable
| | involving addop
| | involving multop
| | involving relop
|X| involving addop + multop
| | involving multop + relop
| | involving addop + multop + relop
| | involving parentheses
| | involving nested parenhteses
| | involving ternary operator
| | involving not
| | involving sign
| | involving literals
|X| involving variable + idnest
|X| involving function calls
| | involving all the above in one expression
*/, 100] 

